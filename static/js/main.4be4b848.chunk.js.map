{"version":3,"sources":["css/SearchInput.module.css","components/Flex.js","components/Title.js","styled.js","utils/tempretureConverter.js","components/Temperature.js","utils/timeConverter.js","components/Diagram.js","components/Weather.js","utils/icons.js","components/SearchInput.js","pages/Home.js","App.js","index.js"],"names":["module","exports","StyledFlex","styled","div","props","direction","align","justify","margin","Flex","StyledTitle","color","size","weight","Title","HomeContainer","StyledSearch","ItemsContainer","theme","media","phone","kelvinToC","kelvin","Math","round","Temperature","data","actualTemperature","maxTemperature","minTemperature","formatValue","value","toFixed","className","parseInt","timeFromTimestamp","timestamp","date","Date","moment","format","Diagram","temperaturesForecast","temperaturesForecastLabels","diagramOptions","series","name","options","chart","height","type","colors","plotOptions","bar","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","xaxis","categories","axisBorder","show","axisTicks","tooltip","labels","yaxis","Weather","weather","wind","main","dt","coord","temp","temp_min","temp_max","weatherIcon","iconId","icon","icons","Icons","id","dateFromTimestamp","geoCoordinates","lat","lon","weatherForecastUrl","process","useState","setTemperaturesForecast","setTemperaturesForecastLabels","useEffect","newTemperatureForecast","newTemperaturesForecastLabels","axios","get","then","res","i","Number","list","fontFamily","description","parseFloat","speed","humidity","pressure","SearchInput","setValue","setData","error","setError","loading","setLoading","console","log","toast","onSubmit","e","preventDefault","response","catch","message","styles","relative","onChange","target","input","placeholder","width","hasOwnProperty","hideProgressBar","closeOnClick","Home","App","Global","createGlobalStyle","ReactDOM","render","tablet","document","getElementById"],"mappings":"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","file":"static/js/main.4be4b848.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"relative\":\"SearchInput_relative__2Q8B3\",\"icon\":\"SearchInput_icon__3vEQs\",\"input\":\"SearchInput_input__3Bo6B\"};","import React from 'react';\nimport styled from \"styled-components\";\n\nconst StyledFlex = styled.div`\n  display: flex;\n  flex-direction: ${props => props.direction || 'row'};\n  align-items: ${props => props.align || 'stretch'};\n  justify-content: ${props => props.justify || 'stretch'};\n  margin: ${({margin}) => margin || '0'};\n`\n\nconst Flex = (props) => {\n    return <StyledFlex {...props}/>\n};\n\nexport default Flex;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst StyledTitle = styled.div`\n  color: ${({color}) => color || '#fff'};\n  font-size: ${props => props.size};\n  font-weight: ${({weight})=> weight || 400};\n  margin: ${props => props.margin};\n  font-family:  \"abel-regular\", Arial, \"Helvetica CY\", \"Nimbus Sans L\", sans-serif;\n`\nconst Title = (props) => {\n    return <StyledTitle {...props}/>\n};\n\nexport default Title;","import styled from \"styled-components\";\n\nexport const HomeContainer = styled.div`\n  width: 100vw;\n  min-height: 100vh;\n  background-image: linear-gradient(43deg, #4158D0 0%, #C850C0 46%, #FFCC70 100%);\n`\n\nexport const StyledSearch = styled.div`\n  width: 500px;\n  min-height: 100vh;\n  display: flex;\n`\n\nexport const Relative = styled.div`\n  position: relative;\n`\n\nexport const ItemsContainer = styled.div`\n  width: 500px;\n  text-align: center;\n  @media ${props => props.theme.media.phone} {\n    max-width: 100vw;\n  }\n`\n\n// export const Error = styled.h1`\n//   color: red;\n//   font-size: 3rem;\n// `","const kelvinToC = (kelvin) => Math.round(kelvin - 273);\n\n\nexport {\n    kelvinToC\n}","import React from \"react\";\nimport AnimatedNumber from \"animated-number-react\";\n\n\nconst Temperature = (props) => {\n    const {actualTemperature, maxTemperature, minTemperature} = props.data;\n\n\n    const formatValue = (value) => value.toFixed(0);\n\n    return (<div className=\"temperature\">\n        <div className=\"temperature__deg\">\n            <AnimatedNumber\n                value={parseInt(actualTemperature)}\n                formatValue={formatValue}\n            />\n        </div>\n        <div className=\"temperature__wrap\">\n            <div className=\"temperature__mesure\">&deg;C</div>\n\n            <div className=\"temperature__box\">\n                <div className=\"temperature__max\">\n                    <span className=\"temperature__mark\">{'\\u2191'}</span>\n                    <p className=\"temperature__text\">\n                        <AnimatedNumber\n                            value={parseInt(maxTemperature)}\n                            formatValue={formatValue}\n                        />\n                    </p>\n                    <span className=\"temperature__unit\">&deg;C</span>\n                </div>\n                <div className=\"temperature__min\">\n                    <span className=\"temperature__mark\">{'\\u2193'}</span>\n                    <p className=\"temperature__text\">\n                        <AnimatedNumber\n                            value={parseInt(minTemperature)}\n                            formatValue={formatValue}\n                        />\n                    </p>\n                    <span className=\"temperature__unit\">&deg;C</span>\n                </div>\n            </div>\n\n        </div>\n    </div>);\n}\n\n\nexport default Temperature;","import moment from \"moment\";\n\n\n// Get date from Unix timestamp\nconst dateFromTimestamp = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    return moment(date).format(\"ddd, MMMM DD\");\n};\n\n// Get time from Unix timestamp\nconst timeFromTimestamp = (timestamp) => {\n    const date = new Date(timestamp * 1000);\n    return moment(date).format(\"HH:MM\");\n};\n\n\nexport {\n    dateFromTimestamp,\n    timeFromTimestamp\n}","import React from 'react';\nimport Chart from 'react-apexcharts'\n\nconst Diagram = (props) => {\n\n    const {temperaturesForecast, temperaturesForecastLabels} = props.data\n\n\n    const diagramOptions = {\n        series: [{\n            name: 'Inflation',\n            data: [...temperaturesForecast]\n        }],\n        options: {\n            chart: {\n                height: 350,\n                type: 'bar',\n            },\n            colors: '#1fa69d',\n            plotOptions: {\n                bar: {\n                    dataLabels: {\n                        position: 'center', // top, center, bottom\n                    },\n                }\n            },\n            dataLabels: {\n                enabled: true,\n                formatter: function (val) {\n                    return val + \"°C\";\n                },\n                offsetY: 10,\n                style: {\n                    fontSize: '1.6rem',\n                    colors: ['#fff']\n                }\n            },\n\n            xaxis: {\n                categories: [...temperaturesForecastLabels],\n                position: 'bottom',\n                axisBorder: {\n                    show: true\n                },\n                axisTicks: {\n                    show: false\n                },\n                tooltip: {\n                    enabled: false,\n                },\n                labels: {\n                    style: {\n                        colors: '#fff',\n                        fontSize: '1.5rem'\n                    },\n                }\n            },\n\n            yaxis: {\n                axisBorder: {\n                    show: true\n                },\n                axisTicks: {\n                    show: false,\n                },\n                labels: {\n                    show: true,\n                    align: 'right',\n                    formatter: function (val) {\n                        return val + \"°C\";\n                    },\n                    style: {\n                        colors: '#fff',\n                        fontSize: '1.5rem'\n                    },\n                }\n            },\n        },\n    }\n\n    return (\n        <div className=\"diagram\">\n            <Chart options={diagramOptions.options} series={diagramOptions.series} type=\"bar\"/>\n        </div>\n    )\n};\n\nexport default Diagram;","import React, {useEffect, useState} from 'react';\nimport AnimatedNumber from 'animated-number-react'\nimport {kelvinToC} from \"../utils/tempretureConverter\";\nimport Temperature from \"./Temperature\";\nimport {dateFromTimestamp, timeFromTimestamp} from \"../utils/timeConverter\";\nimport Flex from \"./Flex\";\nimport Title from \"./Title\";\nimport Icons from \"../utils/icons\";\nimport Diagram from \"./Diagram\";\nimport axios from \"axios\";\n\nconst Weather = (props) => {\n\n    const {name, wind, main, weather, dt, coord} = props.weather;\n\n    const formatValue = (value) => value.toFixed(0);\n\n    const actualTemperature = kelvinToC(main.temp).toFixed(0)\n    const minTemperature = kelvinToC(main.temp_min).toFixed(0)\n    const maxTemperature = kelvinToC(main.temp_max).toFixed(0)\n    const weatherIcon = Icons(weather[0].id)\n    const date = dateFromTimestamp(dt)\n\n\n    const BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\n    let geoCoordinates = `&lat=${coord.lat}&lon=${coord.lon}`;\n    const weatherForecastUrl = `${BASE_URL}forecast?appid=${process.env.REACT_APP_API_KEY}${geoCoordinates}`;\n\n\n    const [temperaturesForecast, setTemperaturesForecast] = useState([])\n    const [temperaturesForecastLabels, setTemperaturesForecastLabels] = useState([])\n\n    useEffect(() => {\n        const newTemperatureForecast = []\n        const newTemperaturesForecastLabels = []\n        axios.get(weatherForecastUrl).then(function (res) {\n            for (let i = 0; i < 5; i++) {\n                newTemperatureForecast[i] = Number(kelvinToC(res.data.list[i].main.temp).toFixed(1));\n                newTemperaturesForecastLabels[i] = timeFromTimestamp(res.data.list[i].dt);\n            }\n            setTemperaturesForecast(newTemperatureForecast)\n            setTemperaturesForecastLabels(newTemperaturesForecastLabels)\n        })\n    }, [name, weatherForecastUrl])\n\n    return (\n        <div className=\"detail\">\n            <Flex direction=\"row\" justify=\"space-between\" margin=\"10px 0\">\n                <Title size=\"2rem\" weight=\"bold\">{date}</Title>\n                <Title size=\"2rem\" weight=\"bold\"><span style={{fontFamily: 'Source Code Pro'}}>{name}</span></Title>\n            </Flex>\n\n\n            <Temperature data={{actualTemperature, minTemperature, maxTemperature}}/>\n\n            <div className=\"detail__wrap\">\n          <span className=\"detail__icon\">\n            <i className={weatherIcon}/>\n          </span>\n                <div className=\"detail__description\">\n                    {weather[0].description}\n                </div>\n            </div>\n\n            <div className=\"detail__box\">\n                <div className=\"detail__indicator\">\n                    <div className=\"detail__info\">\n                        <AnimatedNumber\n                            value={parseFloat(wind.speed)}\n                            formatValue={(value) => value.toFixed(2)}\n                        />\n                        <span className=\"detail__measure\">m/s</span>\n                    </div>\n                    <div className=\"detail__name\">wind speed</div>\n                </div>\n\n                <div className=\"detail__indicator\">\n                    <div className=\"detail__info\">\n                        <AnimatedNumber\n                            value={parseInt(main.humidity)}\n                            formatValue={formatValue}\n                        />\n                        <span className=\"detail__measure\">%</span>\n                    </div>\n                    <div className=\"detail__name\">humidity</div>\n                </div>\n\n                <div className=\"detail__indicator\">\n                    <div className=\"detail__info\">\n                        <AnimatedNumber\n                            value={parseInt(main.pressure)}\n                            formatValue={formatValue}\n                        />\n                        <span className=\"detail__measure\">hpa</span>\n                    </div>\n                    <div className=\"detail__name\">pressure</div>\n                </div>\n            </div>\n            <div>\n                <Diagram data={{temperaturesForecastLabels, temperaturesForecast}}/>\n            </div>\n        </div>);\n};\n\nexport default Weather;","import icons from './iconsList.json';\n\nexport default function Icons (iconId) {\n    const prefix = 'wi wi-';\n    let icon = icons[ iconId ].icon;\n\n    // If we are not in the ranges mentioned above, add a day/night prefix.\n    if (!(iconId > 699 && iconId < 800) && !(iconId > 899 && iconId < 1000)) {\n        icon = 'day-' + icon;\n    }\n\n    return prefix + icon;\n}","import React, {useState} from 'react';\nimport {AiOutlineSearch} from 'react-icons/ai';\nimport Loader from \"react-loader-spinner\";\nimport {toast, ToastContainer} from 'react-toastify';\nimport axios from \"axios\";\n\n\nimport Title from \"./Title\";\nimport Flex from \"./Flex\";\nimport styles from '../css/SearchInput.module.css'\nimport {ItemsContainer, StyledSearch} from \"../styled\";\nimport Weather from \"./Weather\";\n\n\nconst SearchInput = () => {\n\n    const [value, setValue] = useState('')\n    const [data, setData] = useState({})\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    console.log(error, 'error')\n\n    const API_KEY = process.env.REACT_APP_API_KEY || \"\"\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${value}&appid=${API_KEY}`)\n            .then(function (response) {\n                setData(response.data)\n                setValue('')\n                setLoading(false)\n            })\n            .catch(function (error) {\n                setError(error.message)\n            })\n            .then(function () {\n                setLoading(false)\n            })\n    }\n\n    if (error) {\n        toast.error('Couldn\\'t get weather data')\n    }\n\n    const inputChange = e => {\n        setError(null)\n        setValue(e.target.value)\n    }\n    return (\n        <StyledSearch>\n            <Flex justify=\"center\">\n                <ItemsContainer>\n                    <Title size=\"4rem\" margin=\"5px 0\">Weather</Title>\n                    <form onSubmit={onSubmit}>\n                        <div className={styles.relative}>\n                            <input\n                                value={value}\n                                onChange={inputChange}\n                                className={styles.input}\n                                placeholder=\"City...\"\n                            />\n                            <AiOutlineSearch className={styles.icon}/>\n                        </div>\n                    </form>\n\n                    <Flex justify=\"center\">\n                        {loading && <Loader\n                            type=\"Puff\"\n                            color=\"#00BFFF\"\n                            height={100}\n                            width={100}\n                        />}\n                        <div>{data.hasOwnProperty('name') ? <Weather weather={data}/> :\n                            <Title size=\"3rem\" weight=\"bold\">Nothing found yet</Title>}</div>\n                        {error && <ToastContainer\n                            hideProgressBar={true}\n                            closeOnClick\n                        />}\n                    </Flex>\n                </ItemsContainer>\n            </Flex>\n        </StyledSearch>\n    );\n};\n\nexport default SearchInput;","import React from 'react';\nimport Flex from \"../components/Flex\";\nimport SearchInput from \"../components/SearchInput\";\nimport {HomeContainer} from \"../styled\";\n\nconst Home = () => {\n\n\n\n    return (\n        <HomeContainer>\n            <Flex justify=\"center\">\n                <SearchInput/>\n            </Flex>\n        </HomeContainer>\n);\n};\n\nexport default Home;","import React from 'react';\n\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n    return (\n        <Home />\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createGlobalStyle, ThemeProvider} from 'styled-components'\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nimport App from './App';\nimport './main.css'\nimport './css/weather-icons.css'\n\nconst Global = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }`\n\nconst theme = {\n    media: {\n        phone: \"(max-width: 425px)\",\n        tablet: \"(max-width: 768) and (min-width: 425px)\",\n    }\n}\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <Global/>\n        <App/>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}